#include "mbed.h"
#include "uLCD_4DGL.h"


uLCD_4DGL uLCD(D1, D0, D2);
InterruptIn sw2(BUTTON1);
EventQueue queue(32 * EVENTS_EVENT_SIZE);
Thread t;

void led1_info() {
   // Note that printf is deferred with a call in the queue
   // It is not executed in the interrupt context
    printf("button is press \r\n");   
    uLCD.printf("\nHello uLCD World\n");
    ThisThread::sleep_for(1s);
    uLCD.cls();
}

void Trig_led1()  {
    // Execute the time critical part first
    // The rest can execute later in user context
    queue.call(led1_info);
}

int main() {
   // t is a thread to process tasks in an EventQueue
   // call in queue is now executed in the context of the thread
   // t call queue.dispatch_forever() to start the scheduler of the EventQueue
   t.start(callback(&queue, &EventQueue::dispatch_forever));
   // 'Trig_led1' will execute in IRQ context
   sw2.rise(Trig_led1);
}






